import React, { useState } from 'react';

interface AIDetectionFormProps {
  onAnalyze: (text: string) => void;
  isAnalyzing: boolean;
  error: string;
  isPaymentError?: boolean;
}

const AIDetectionForm: React.FC<AIDetectionFormProps> = ({
  onAnalyze,
  isAnalyzing,
  error,
  isPaymentError = false
}) => {
  const [text, setText] = useState('');
  const [charCount, setCharCount] = useState(0);
  
  const handleTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {
    const newText = e.target.value;
    setText(newText);
    setCharCount(newText.length);
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onAnalyze(text);
  };

  return (
    <div className="bg-white dark:bg-gray-900 rounded-xl shadow-lg p-6">
      <div className="mb-6">
        <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">
          Paste Your Text
        </h2>
        <p className="text-gray-600 dark:text-gray-300">
          Our AI detection technology will analyze your text and determine if it was likely generated by an AI like ChatGPT, GPT-4, or similar language models.
        </p>
      </div>

      {error && (
        <div className={`mb-6 p-4 ${isPaymentError ? 'bg-yellow-50 dark:bg-yellow-900/30 border-yellow-200 dark:border-yellow-900 text-yellow-700 dark:text-yellow-400' : 'bg-red-50 dark:bg-red-900/30 border-red-200 dark:border-red-900 text-red-600 dark:text-red-400'} border rounded-md`}>
          <div className="flex items-start">
            {isPaymentError ? (
              <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-2 mt-0.5 flex-shrink-0" viewBox="0 0 20 20" fill="currentColor">
                <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clipRule="evenodd" />
              </svg>
            ) : (
              <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-2 mt-0.5 flex-shrink-0" viewBox="0 0 20 20" fill="currentColor">
                <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clipRule="evenodd" />
              </svg>
            )}
            <div>
              {error}
              {isPaymentError && (
                <p className="mt-2 text-sm">
                  The API has reached its usage limit. Please try again later or contact the site administrator.
                </p>
              )}
            </div>
          </div>
        </div>
      )}

      <form onSubmit={handleSubmit}>
        <div className="mb-4">
          <textarea
            className="w-full h-64 p-4 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md resize-none focus:outline-none focus:ring-2 focus:ring-blue-500"
            placeholder="Paste your content here to check for AI generation..."
            value={text}
            onChange={handleTextChange}
            disabled={isAnalyzing}
            required
          ></textarea>
          <div className="mt-2 flex justify-between text-sm text-gray-500 dark:text-gray-400">
            <span>Minimum 50 characters recommended for accurate detection</span>
            <span>{charCount} characters</span>
          </div>
        </div>
        
        <div className="flex items-center justify-between">
          <div>
            <button
              type="button"
              className="text-gray-500 dark:text-gray-400 mr-4 hover:text-gray-700 dark:hover:text-gray-300"
              onClick={() => setText('')}
              disabled={isAnalyzing || !text}
            >
              Clear
            </button>
            <button
              type="button"
              className="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300"
              onClick={() => {
                const demoText = "This text was generated by an artificial intelligence language model. It's designed to showcase the capabilities of AI in creating human-like text. The model processes patterns it learned from vast amounts of training data to generate coherent paragraphs on various topics. While these systems can produce impressive results, they lack true understanding and consciousness.";
                setText(demoText);
                setCharCount(demoText.length);
              }}
              disabled={isAnalyzing}
            >
              Load Demo Text
            </button>
          </div>
          <button
            type="submit"
            className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-md font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center"
            disabled={isAnalyzing || !text}
          >
            {isAnalyzing ? (
              <>
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                Analyzing...
              </>
            ) : (
              'Analyze Text'
            )}
          </button>
        </div>
      </form>
    </div>
  );
};

export default AIDetectionForm; 